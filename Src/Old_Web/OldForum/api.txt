~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
API.TXT  ~~  Part of Toast Forums
Copyright (c) 2000-2002 Headrush Media.  All Rights Reserved.

This file may be not be reverse-engineered, redistributed or sold without prior
written authorization from Headrush Media (headrushmedia.com).  This copyright notice
must remain visible inside this file AT ALL TIMES.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

INTRODUCTION
------------
Using the Toast Forums API, you can quickly and easily add, modify, update or delete all
Forums, Users or Posts.  This is done by simply including a single file into your script
and then calling API functions.


SETUP
-----
Before you get started using the API in your scripts, keep in mind the following notes:

	1.  Shared.asp uses an include directive to include custom.asp and constants.asp.  It
	    looks for these files in the same directory that it is in.  This means you need to
	    include shared.asp from your forums directory; you shouldn't simply copy shared.asp
	    to your scripts directory and include it from there.
	    
	2.  If the path to your database file is specified as a relative path using Server.Mappath
		in the constants.asp file, you'll need to change it to an absolute path.  This is
		because the relative path is specified relative to the forums directory.  If your
		script exists outside the forums directory and includes shared.asp, the relative
		path to the database is no longer relative from the forums directory.
		
	3.  Because shared.asp uses the VBScript.Encode language, you'll need to change the
		language directive on your page to this language.  Don't worry, your existing code
		will still work just fine.  Here is what an example script using the API might look like:
		
		-----------------------------------------------------------------------------------------
		<%@ LANGUAGE = VBScript.Encode %>
		<!--#INCLUDE FILE="toast/shared.asp"-->
		<%
			Response.Write shrGetConfig("tstcfgBoardTitle")
		%>
		-----------------------------------------------------------------------------------------
		
		This script would simply write out the title of your board.
		

API REFERENCE
-------------

-------------------------------------------------------------------------------------------------
Forum Manipulation
-------------------------------------------------------------------------------------------------
	
Function shrNewForum(ByRef intForumID, ByVal intCategoryID, ByVal intModeratorID, ByVal strForumName, ByVal strDescription, ByVal strGuestAccess, ByVal strMemberAccess, ByVal bDeleted)
	Description:  Adds a new Forum.  New ID of Forum is passed back through the intForumID ByRef parameter.
	Returns:  Zero-length string ("") if no errors.  If errors occured, returns the error text.
	Parameters:
		intForumID			ID of new Forum that will be created.  Pass in an empty variable, and when
							the function completes, the variable will hold the new Forum's ID.
		intCategoryID		Unused in this version.  Pass in -1 or Null.
		intModeratorID		UserID of the Moderator for new Forum.  Required.
		strForumName		Name of new Forum.  Required.
		strDescription		Description of new Forum.  Not required.  Pass in Null for blank.
		strGuestAccess		3 character max string that specifies Guest access.  "R" means Read permission,
							"T" means Post Topics permission and "P" means Post Replies permission.  Required.
		strMemberAccess		Same as strGuestAccess, but specifies access for Registered Members.
		bDeleted			Boolean indicating whether the deleted flag is True.  Forums marked as Deleted
							do not show up in the Forums list and show up in the Recycle Bin.
	Example:
	
		strReturn = shrNewForum(intForumID, -1, 32, "API Forum", "Forum created using the API", "R", "RTP", False)
		If strReturn <> "" Then
			Response.Write "Error occured: " & strReturn
		Else
			Response.Write "New Forum created. ID = " & intForumID
		End If

-------------------------------------------------------------------------------------------------

Function shrModifyForum(ByVal intForumID, ByVal intCategoryID, ByVal intModeratorID, ByVal strForumName, ByVal strDescription, ByVal strGuestAccess, ByVal strMemberAccess, ByVal bDeleted)
	Description:  Modifies an existing Forum.
	Returns:  Zero-length string ("") if no errors.  If errors occured, returns the error text.
	Parameters:
		intForumID			ID of Forum to modify.
		intCategoryID		Unused in this version.  Pass in Null to leave unchanged.
		intModeratorID		UserID of the Moderator for Forum.  Pass in Null to leave unchanged.
		strForumName		Name of Forum.  Pass in Null to leave unchanged.
		strDescription		Description of Forum.  Pass in Null to leave unchanged.
		strGuestAccess		3 character max string that specifies Guest access.  "R" means Read permission,
							"T" means Post Topics permission and "P" means Post Replies permission.  Pass in Null to leave unchanged.
		strMemberAccess		Same as strGuestAccess, but specifies access for Registered Members.  Pass in Null to leave unchanged.
		bDeleted			Boolean indicating whether the deleted flag is True.  Forums marked as Deleted
							do not show up in the Forums list and show up in the Recycle Bin.  Pass in Null to leave unchanged.
	Example:
	
		strReturn = shrModifyForum(1, Null, Null, "Modified API Forum", Null, Null, Null, Null)
		If strReturn <> "" Then
			Response.Write "Error occured: " & strReturn
		Else
			Response.Write "Forum ID 1 changed to ""Modified API Forum"""
		End If

-------------------------------------------------------------------------------------------------
	
Function shrDeleteForum(ByVal intForumID)
	Description:  Permantly deletes an existing Forum.  To just mark a Forum as deleted, use shrModifyForum.
	Returns:  Zero-length string ("") if no errors.  If errors occured, returns the error text.
	Parameters:
		intForumID			ID of the Forum to be Deleted.
		
	Example:
	
		strReturn = shrDeleteForum(1)
		If strReturn <> "" Then
			Response.Write "Error occured: " & strReturn
		Else
			Response.Write "Forum ID 1 deleted."
		End If
		
-------------------------------------------------------------------------------------------------
	
Function shrFindForums(ByVal intForumID, ByVal bDeleted)
	Description:  Gets a recordset of Forums based on search criteria.
	Returns:  Recordset of matching Forums.
	Parameters:
		intForumID			ID of a specific Forum to get.  Pass in Null to get all Forums.
		bDeleted			Boolean indicating whether to return Deleted or Non-deleted Forums.
							Pass in Null for both.
	Example:
	
		Set rsForums = shrFindForums(1, Null)
		If rsForums.EOF Then
			Response.Write "Forum not found."
		Else
			Response.Write "Forum ID 1's name is: " & rsForums("ForumName")
		End If	
		
-------------------------------------------------------------------------------------------------
User Manipulation
-------------------------------------------------------------------------------------------------

Function shrNewUser(ByRef intMemberID, ByVal strFName, ByVal strLName, ByVal strUsername, ByVal strPassword, ByVal strEmail, ByVal bHideEmail, ByVal strICQ, ByVal strHomepage, ByVal strSignature, ByVal strSkin, ByVal bIncludeSignature, ByVal bNotifyDefault)
	Description:  Adds a new User.  New ID of User is passed back through the intMemberID ByRef parameter.
	Returns:  Zero-length string ("") if no errors.  If errors occured, returns the error text.
	Parameters:
		intMemberID			ID of new User that will be created.  Pass in an empty variable, and when
							the function completes, the variable will hold the new User's ID.
		strFName			First Name of User.  Null permitted.
		strLName			Last Name of User.  Null permitted.
		strUsername			Username of User.  Required.
		strPassword			Password of User.  Required.
		strEmail			Email of User.  Required.
		bHideEmail			Boolean, true if User's Email should be hidden in Profile.  Null permitted.
							Default is True.
		strICQ				ICQ number of User.  Null permitted.
		strHomepage			Homepage of User.  Null permitted.
		strSignature		Signature of User.  Null permitted.
		strSkin				Chosen Skin for User.  Null permitted.  Defaults to Default Skin.
		bIncludeSignature	Boolean, true if User's signature should be included on posts by default.  Null
							permitted.  Default is False.
		bNotifyDefault		Boolean, true if User should be notified of all replies to his posts by default.
							Null permitted.  Default is True.
							
	Example:
		
		strReturn = shrNewUser(intMemberID, "Test", "User", "testuser", "testpass", "test@toastforums.com", Null, Null, Null, Null, Null, Null, Null)
		If strReturn <> "" Then
			Response.Write "Error occured: " & strReturn
		Else
			Response.Write "New User created. ID = " & intMemberID
		End If

-------------------------------------------------------------------------------------------------

Function shrModifyUser(ByVal intMemberID, ByVal strFName, ByVal strLName, ByVal strUsername, ByVal strPassword, ByVal strEmail, ByVal bHideEmail, ByVal strICQ, ByVal strHomepage, ByVal strSignature, ByVal strSkin, ByVal bIncludeSignature, ByVal bNotifyDefault, ByVal intPostCount, ByVal strLastLoginDate, ByVal strLastPostDate)
	Description:  Modifies an existing User.
	Returns:  Zero-length string ("") if no errors.  If errors occured, returns the error text.
	Parameters:
		intMemberID			ID of User to be modified.
		strFName			First Name of User.  Pass in Null to leave unchanged.
		strLName			Last Name of User.  Pass in Null to leave unchanged.
		strUsername			Username of User.  Pass in Null to leave unchanged.
		strPassword			Password of User.  Pass in Null to leave unchanged.
		strEmail			Email of User.  Pass in Null to leave unchanged.
		bHideEmail			Boolean, true if User's Email should be hidden in Profile.  Pass in Null to leave unchanged.
		strICQ				ICQ number of User.  Pass in Null to leave unchanged.
		strHomepage			Homepage of User.  Pass in Null to leave unchanged.
		strSignature		Signature of User.  Pass in Null to leave unchanged.
		strSkin				Chosen Skin for User.  Pass in Null to leave unchanged.
		bIncludeSignature	Boolean, true if User's signature should be included on posts by default.  
							Pass in Null to leave unchanged.
		bNotifyDefault		Boolean, true if User should be notified of all replies to his posts by default.
							Pass in Null to leave unchanged.
		intPostCount		Number of Posts this user has made.  Pass in Null to leave unchanged.
		strLastLoginDate	Last Login Date for User.  Pass in Null to leave unchanged.
		strLastPostDate		Last Post Date for User.  Pass in Null to leave unchanged.

	Example:
	
		strReturn = shrModifyUser(1, Null, Null, "ModifiedUser", "changedpw", Null, Null, Null, Null, Null, Null, Null, Null, Null, Null, Null)
		If strReturn <> "" Then
			Response.Write "Error occured: " & strReturn
		Else
			Response.Write "User ID 1's Username changed to ""ModifiedUser"""
		End If
		
-------------------------------------------------------------------------------------------------

Function shrDeleteUser(ByVal intUserID)
	Description:  Permantly deletes an existing User.
	Returns:  Zero-length string ("") if no errors.  If errors occured, returns the error text.
	Parameters:
		intMemberID			ID of User to be deleted.
		
	Example:
	
		strReturn = shrDeleteUser(1)
		If strReturn <> "" Then
			Response.Write "Error occured: " & strReturn
		Else
			Response.Write "User ID 1 deleted."
		End If
		
-------------------------------------------------------------------------------------------------

Function shrFindUser(ByVal intMemberID, ByVal strFName, ByVal strLName, ByVal strUsername, ByVal strEmail, ByVal strOrderBy)
	Description:  Gets a recordset of Users based on search criteria.
	Returns:  Recordset of matching Users.
	Parameters:
		intMemberID			ID of User to find.  Pass in Null to get all User ID's.
		strFName			First Name of User.  Pass in Null to get any First Names.
		strLName			Last Name of User.  Pass in Null to get any Last Names.
		strUsername			Username of User.  Pass in Null to get any Usernames.
		strEmail			Email of User.  Pass in Null to get any Emails.
		strOrderBy			ORDER BY clause.  
		
	Example:
	
		Set rsForums = shrFindUser(1, Null, Null, Null, Null, Null)
		If rsForums.EOF Then
			Response.Write "User not found."
		Else
			Response.Write "User ID 1's Username is: " & rsForums("Username")
		End If
		
-------------------------------------------------------------------------------------------------
Post Manipulation
-------------------------------------------------------------------------------------------------

Function shrNewPost(ByVal intForumID, ByRef intTopicID, ByRef intPostID, ByVal intMemberID, ByVal strGuestName, ByVal intIcon, ByVal strSubject, ByVal strMessage, ByVal bMailNotice)
	Description:  Adds a new Post (Topic or Reply).  New ID of Topic or Reply is passed back through intTopicID or intPostID, respectively.
	Returns:  Zero-length string ("") if no errors.  If errors occured, returns the error text.
	Parameters:
		intForumID			ID of Forum that new Post will be posted to.  Required.
		intTopicID			If this is a new Reply, intTopicID is the Topic that the Reply is posted to.
							If this is a new Topic, pass in 0.  Required.
		intPostID			ID of new Post that will be created.  Pass in an empty variable, and when
							the function completes, the variable will hold the new Post's ID.
		intMemberID			UserID of Author.  If Guest, pass in 0.  Required.
		strGuestName		If this is a Guest post, name of Guest user.  Otherwise Null.  Required.
		intIcon				Number of Post Icon, from 1-10.  1 is "No Icon."  Required.
		strSubject			Subject of Post.  Required.
		strMessage			Message body of Post.  Required.
		bMailNotice			Boolean, whether author should be notified of replies.  Only valid when author is not Guest.  Required.
		
	Example:
	
		strReturn = shrNewPost(1, 0, intPostID, 1, Null, 1, "New Topic from API", "This topic was posted using the API.")
		If strReturn <> "" Then
			Response.Write "Error occured: " & strReturn
		Else
			Response.Write "New Topic created. ID = " & intPostID
		End If
		
		strReturn = shrNewPost(1, 1, intPostID, 0, "Guest", 1, "New Reply from API", "This reply was posted by a Guest using the API.", True)
		If strReturn <> "" Then
			Response.Write "Error occured: " & strReturn
		Else
			Response.Write "New Reply created. ID = " & intPostID
		End If

-------------------------------------------------------------------------------------------------

Function shrModifyPost(ByVal intForumID, ByVal intTopicID, ByVal intPostID, ByVal intMemberID, ByVal strGuestName, ByVal intIcon, ByVal strSubject, ByVal strMessage, ByVal bMailNotice, ByVal bActive, ByVal bDeleted)
	Description:  Modifies an existing Post.
	Returns:  Zero-length string ("") if no errors.  If errors occured, returns the error text.
	Parameters:
		intForumID			ID of Forum that new Post will be posted to.  Pass in Null to leave unchanged.
		intTopicID			If this is a new Reply, intTopicID is the Topic that the Reply is posted to.
							If this is a new Topic, pass in 0.  Pass in Null to leave unchanged.
		intPostID			ID of Post to modify.  Required.
		intMemberID			UserID of User making modification, so permissions can be checked.  Admins can
							modify any Post, Moderators can modify any Post for their Forums, and Authors
							can modify their own Post.  In all cases, the original Author of the Post is
							not changed.  Required.
		strGuestName		If this is a Guest post, name of Guest user.  Otherwise Null.  Pass in Null to leave unchanged.
		intIcon				Number of Post Icon, from 1-10.  1 is "No Icon."  Pass in Null to leave unchanged.
		strSubject			Subject of Post.  Pass in Null to leave unchanged.
		strMessage			Message body of Post.  Pass in Null to leave unchanged.
		bMailNotice			Boolean, whether author should be notified of replies.  Only valid when author is not Guest.
							Pass in Null to leave unchanged.
		bActive				Boolean.  Only applies to Topics.  True if Topic is not locked.  False to lock Topic.
							Pass in Null to leave unchanged.
		bDeleted			Boolean.  True if this Post should be marked as Deleted and show up in the Admin Recycle
							Bin.  Pass in Null to leave unchanged.

	Example:
	
		strReturn = shrModifyPost(Null, Null, 1, 1, Null, Null, "Topic Modified from API", "This topic was modified using the API.", Null, Null, Null)
		If strReturn <> "" Then
			Response.Write "Error occured: " & strReturn
		Else
			Response.Write "Post ID 1's Topic and Message changed."
		End If
		
-------------------------------------------------------------------------------------------------

Function shrDeletePost(ByVal strPostIDs)
	Description:  Permantly deletes existing Posts.
	Returns:  Zero-length string ("") if no errors.  If errors occured, returns the error text.
	Parameters:
		strPostIDs			Comma delimited list of PostID's to Delete.
		
	Example:
	
		strReturn = shrDeletePost(1,2,3,4)
		If strReturn <> "" Then
			Response.Write "Error occured: " & strReturn
		Else
			Response.Write "Posts deleted."
		End If
		
-------------------------------------------------------------------------------------------------

Function shrFindPosts(ByVal intForumID, ByVal intTopicID, ByVal intPostID, ByVal intMemberID, ByVal strAuthorName, ByVal intIcon, ByVal strSubject, ByVal strMessage, ByVal bMailNotice, ByVal bActive, ByVal bDeleted, ByVal intDayPrune, ByVal intSearchType, ByVal strOrderBy, ByVal intPageSize)
	Description:  Gets a recordset of Posts based on search criteria.
	Returns:  Recordset of matching Posts.
	Parameters:
		intForumID			Find all Posts with this ForumID.  Pass in Null to leave this criteria blank.
		intTopicID			Find all Posts with this TopicID.  Pass in Null to leave this criteria blank.
		intPostID			Find Post with this PostID.  Pass in Null to leave this criteria blank.
		intMemberID			Find Post with authored by this User ID.  Pass in Null to leave this criteria blank.
		strAuthorName		Find all Posts with this AuthorName (includes Guest names).  Pass in Null to leave this criteria blank.
		intIcon				Find all Posts with this Icon number.  Pass in Null to leave this criteria blank.
		strSubject			Find all Posts with these space delimited keywords in the Subject.  Pass in Null to leave this criteria blank.
		strMessage			Find all Posts with these space delimited keywords in the Message.  Pass in Null to leave this criteria blank.
		bMailNotice			Find all Posts with the "Notification of Reply" checkbox checked.  Pass in Null to leave this criteria blank.
		bActive				Find all Topics that are Active or Inactive.  Pass in Null to leave this criteria blank.
		bDeleted			Find all Posts that are deleted or not deleted.  Pass in Null to leave this criteria blank.
		intDayPrune			How many days before today to limit the query to.  Pass in Null to leave this criteria blank.
		intSearchType		Search type to perform.  For All Criteria ("AND"), pass in 0.  For Any Criteria ("OR"), pass in 1.
		strOrderBy			Order By clause for resulting recordset.  Pass Null for no ordering.
		intPageSize			Page Size of resulting recordset (how many records per Page).  Pass Null for all records.
		
	Example:
	
		Set rsPosts = shrFindPosts(1, Null, Null, 1, Null, Null, Null, Null, Null, Null, Null, Null, Null, "PostDate DESC", Null)
		If rsForums.EOF Then
			Response.Write "No matching Posts found."
		Else
			Response.Write rsPosts.RecordCount & " posts found."
		End If
		
-------------------------------------------------------------------------------------------------
Miscellaneous Functions
-------------------------------------------------------------------------------------------------

Function shrRC4EncryptPassword(strString)
	Description:  Encrypts or Decrypts a Toast Forums password.
	Returns:  Unencrypted or Encrypted password.
	Parameters:
		strString			Any password that you would like encrypted or decrypted.  If you pass
							an encrypted string, it will be returned decrypted, and vice-versa.
							
	Example:
	
		Response.Write shrRC4EncryptPassword("PasswordToEncrypt")
		Response.Write shrRC4EncryptPassword("3u3h123hm0cnv-4af")

-------------------------------------------------------------------------------------------------

Function shrGetConfig(strConfig)
	Description:  Gets a configuration value or a language string.
	Returns:  String of configuration value or language parameter, or zero length string if not found.
	Parameters:
		strConfig			Any parameter from the config.asp file, or any parameter from the language.txt
							or links.txt file.
							
	Example:
	
		Response.Write shrGetConfig("tstcfgBoardTitle")

-------------------------------------------------------------------------------------------------

Function shrDoLogin(ByVal strUsername, ByVal strPassword)
	Description:  Attempts to log a user in with specified Username and Password.  If successful, sets all
				  necessary Session variables.
	Returns:  True if successful, false if bad username or password.
	Parameters:
		strUsername			Username to login.
		strPassword			Password for user.
							
	Example:
	
		Response.Write shrDoLogin("user", "password")
		
-------------------------------------------------------------------------------------------------

Sub shrExecuteSQL(strSQL)
	Description:  Executes an arbitrary SQL statement against the Toast database.
	Parameters:
		strSQL				INSERT, UPDATE or DELETE SQL statement.
		
	Example:
	
		shrExecuteSQL("DELETE FROM tstdb_Forum WHERE ID = 1")

-------------------------------------------------------------------------------------------------

Function shrGetRecordset(strSQL, CursorLocation, CursorType, LockType, PageSize)
	Description:  Gets a Recordset from the Toast database.
	Returns:  An ADODB.Recordset object.
	Parameters:
		strSQL				SELETE SQL statement.
		CursorLocation		Cursor Location for Recordset.  Pass in -1 for Default.
		CursorType			Cursor Type for Recordset.  Pass in -1 for Default.
		LockType			Lock Type for Recordset.  Pass in -1 for Default.
		PageSize			PageSize for Recordset.  Pass in -1 for all records.
		
	Example:
	
		'using CursorLocation, CursorType and LockType constants from constants.asp file
		Set rsMain = shrGetRecordset("SELECT * FROM tstdb_Forum", tstReadOnlyCursorLocation, tstReadOnlyCursorType, tstReadOnlyLockType, -1)
		Do Until rsMain.EOF
			Response.Write rsMain("ForumName") & "<br>"
			rsMain.MoveNext
		Loop
		
-------------------------------------------------------------------------------------------------
